{"version":3,"file":"AnnouncementController.js","sourceRoot":"","sources":["../../src/announcement/AnnouncementController.ts"],"names":[],"mappings":";;;AAAA,sDAA0E;AA4C1E,MAAM,YAAY,GAAG;IACnB,aAAa,EAAE,EAAE;CAClB,CAAC;AAEF;;GAEG;AACH,MAAa,sBAAuB,SAAQ,+BAG3C;IACC;;;;;OAKG;IACH,YAAY,MAA0B,EAAE,KAAyB;QAC/D,KAAK,CAAC,MAAM,EAAE,KAAK,IAAI,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED;;;;;OAKG;IACK,iBAAiB;QACvB,MAAM,gBAAgB,GAAyB,EAAE,CAAC;QAClD,MAAM,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CACrC,CAAC,YAA+B,EAAE,EAAE;YAClC,gBAAgB,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAC1D,YAAY,CAAC,EAAE,CAChB;gBACC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC;gBAC3C,CAAC,iCACM,YAAY,KACf,OAAO,EAAE,KAAK,GACf,CAAC;QACR,CAAC,CACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,gBAAgB,EAAE,CAAC,CAAC;IACnD,CAAC;IAED;;;;;OAKG;IACH,YAAY,CAAC,SAA6B;QACxC,MAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAEpD,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YACnD,kBAAkB,CAAC,EAAE,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;SAChD;QACD,IAAI,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,kBAAkB,EAAE,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;CACF;AAtDD,wDAsDC","sourcesContent":["import { BaseController, BaseConfig, BaseState } from '../BaseController';\n\ninterface ViewedAnnouncement {\n  [id: number]: boolean;\n}\n\ninterface Announcement {\n  id: number;\n  date: string;\n}\n\ninterface StateAnnouncement extends Announcement {\n  isShown: boolean;\n}\n\n/**\n * A map of announcement ids to Announcement objects\n */\ninterface AnnouncementMap {\n  [id: number]: Announcement;\n}\n\n/**\n * A map of announcement ids to StateAnnouncement objects\n */\nexport interface StateAnnouncementMap {\n  [id: number]: StateAnnouncement;\n}\n\n/**\n * AnnouncementConfig will hold the active announcements\n */\nexport interface AnnouncementConfig extends BaseConfig {\n  allAnnouncements: AnnouncementMap;\n}\n\n/**\n * Announcement state will hold all the seen and unseen announcements\n * that are still active\n */\nexport interface AnnouncementState extends BaseState {\n  announcements: StateAnnouncementMap;\n}\n\nconst defaultState = {\n  announcements: {},\n};\n\n/**\n * Controller for managing in-app announcements.\n */\nexport class AnnouncementController extends BaseController<\n  AnnouncementConfig,\n  AnnouncementState\n> {\n  /**\n   * Creates a AnnouncementController instance.\n   *\n   * @param config - Initial options used to configure this controller.\n   * @param state - Initial state to set on this controller.\n   */\n  constructor(config: AnnouncementConfig, state?: AnnouncementState) {\n    super(config, state || defaultState);\n    this.initialize();\n    this._addAnnouncements();\n  }\n\n  /**\n   * Compares the announcements in state with the announcements from file\n   * to check if there are any new announcements\n   * if yes, the new announcement will be added to the state with a flag indicating\n   * that the announcement is not seen by the user.\n   */\n  private _addAnnouncements(): void {\n    const newAnnouncements: StateAnnouncementMap = {};\n    const { allAnnouncements } = this.config;\n    Object.values(allAnnouncements).forEach(\n      (announcement: StateAnnouncement) => {\n        newAnnouncements[announcement.id] = this.state.announcements[\n          announcement.id\n        ]\n          ? this.state.announcements[announcement.id]\n          : {\n              ...announcement,\n              isShown: false,\n            };\n      },\n    );\n    this.update({ announcements: newAnnouncements });\n  }\n\n  /**\n   * Updates the status of the status of the specified announcements\n   * once it is read by the user.\n   *\n   * @param viewedIds - The announcement IDs to mark as viewed.\n   */\n  updateViewed(viewedIds: ViewedAnnouncement): void {\n    const stateAnnouncements = this.state.announcements;\n\n    for (const id of Object.keys(viewedIds).map(Number)) {\n      stateAnnouncements[id].isShown = viewedIds[id];\n    }\n    this.update({ announcements: stateAnnouncements }, true);\n  }\n}\n"]}