name: Publish Release

on:
  push:
    branches: [main]

jobs:
  is-release:
    outputs:
      IS_RELEASE: ${{ steps.is-release.outputs.IS_RELEASE }}
    runs-on: ubuntu-latest
    steps:
      - uses: MetaMask/action-is-release@v1
        id: is-release

  publish-release:
    permissions:
      contents: write
    if: needs.is-release.outputs.IS_RELEASE == 'true'
    runs-on: ubuntu-latest
    needs: is-release
    outputs:
      YARN_CACHE_DIR: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
      YARN_VERSION: ${{ steps.yarn-version.outputs.YARN_VERSION }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - uses: MetaMask/action-publish-release@b0b8a39e72e6746bbc3e372d25e55a5f6295842c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Yarn cache directory
        run: echo "YARN_CACHE_DIR=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        id: yarn-cache-dir
      - name: Get Yarn version
        run: echo "YARN_VERSION=$(yarn --version)" >> $GITHUB_OUTPUT
        id: yarn-version
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ steps.yarn-version.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Cache compiled JavaScript
        uses: actions/cache@v3
        with:
          path: ./packages/**/dist
          key: ${{ github.sha }}
      - run: yarn --immutable
      - run: yarn build

  publish-npm-dry-run:
    runs-on: ubuntu-latest
    needs: publish-release
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: Restore Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ needs.publish-release.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ needs.publish-release.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Restore compiled JavaScript
        uses: actions/cache@v3
        with:
          path: ./packages/**/dist
          key: ${{ github.sha }}
      - name: Configure NPM to skip prepublishOnly
        # Set `ignore-scripts` to skip `prepublishOnly` because the release was built already in the previous job
        run: npm config set ignore-scripts true
      - name: Dry Run Publish
        # omit npm-token token to perform dry run publish
        uses: MetaMask/action-npm-publish@v1
        env:
          SKIP_PREPACK: true

  publish-npm:
    environment: npm-publish
    runs-on: ubuntu-latest
    needs: publish-npm-dry-run
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: Restore Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ needs.publish-release.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ needs.publish-release.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Restore compiled JavaScript
        uses: actions/cache@v3
        with:
          path: ./packages/**/dist
          key: ${{ github.sha }}
      - name: Configure NPM to skip prepublishOnly
        # Set `ignore-scripts` to skip `prepublishOnly` because the release was built already in the previous job
        run: npm config set ignore-scripts true
      - name: Publish
        uses: MetaMask/action-npm-publish@v1
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}
        env:
          SKIP_PREPACK: true
